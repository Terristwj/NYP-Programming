//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NYP.FLY_TA_svc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FLY_TA_svc.IWsFLY_TA")]
    public interface IWsFLY_TA {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsFLY_TA/GetOSEPs", ReplyAction="http://tempuri.org/IWsFLY_TA/GetOSEPsResponse")]
        System.Data.DataSet GetOSEPs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsFLY_TA/GetOSEPs", ReplyAction="http://tempuri.org/IWsFLY_TA/GetOSEPsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOSEPsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsFLY_TA/GetOSEPDetails", ReplyAction="http://tempuri.org/IWsFLY_TA/GetOSEPDetailsResponse")]
        System.Data.DataSet GetOSEPDetails(int OSEP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsFLY_TA/GetOSEPDetails", ReplyAction="http://tempuri.org/IWsFLY_TA/GetOSEPDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOSEPDetailsAsync(int OSEP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsFLY_TA/UpdateOSEP", ReplyAction="http://tempuri.org/IWsFLY_TA/UpdateOSEPResponse")]
        int UpdateOSEP(int OSEP_ID, int noRegistered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWsFLY_TA/UpdateOSEP", ReplyAction="http://tempuri.org/IWsFLY_TA/UpdateOSEPResponse")]
        System.Threading.Tasks.Task<int> UpdateOSEPAsync(int OSEP_ID, int noRegistered);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWsFLY_TAChannel : NYP.FLY_TA_svc.IWsFLY_TA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WsFLY_TAClient : System.ServiceModel.ClientBase<NYP.FLY_TA_svc.IWsFLY_TA>, NYP.FLY_TA_svc.IWsFLY_TA {
        
        public WsFLY_TAClient() {
        }
        
        public WsFLY_TAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WsFLY_TAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WsFLY_TAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WsFLY_TAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetOSEPs() {
            return base.Channel.GetOSEPs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOSEPsAsync() {
            return base.Channel.GetOSEPsAsync();
        }
        
        public System.Data.DataSet GetOSEPDetails(int OSEP_ID) {
            return base.Channel.GetOSEPDetails(OSEP_ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOSEPDetailsAsync(int OSEP_ID) {
            return base.Channel.GetOSEPDetailsAsync(OSEP_ID);
        }
        
        public int UpdateOSEP(int OSEP_ID, int noRegistered) {
            return base.Channel.UpdateOSEP(OSEP_ID, noRegistered);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOSEPAsync(int OSEP_ID, int noRegistered) {
            return base.Channel.UpdateOSEPAsync(OSEP_ID, noRegistered);
        }
    }
}
