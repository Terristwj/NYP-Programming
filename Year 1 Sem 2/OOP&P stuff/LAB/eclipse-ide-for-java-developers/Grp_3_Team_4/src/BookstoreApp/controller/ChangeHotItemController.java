package BookstoreApp.controller;

import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import java.util.concurrent.ConcurrentNavigableMap;
import org.mapdb.BTreeMap;
import org.mapdb.DB;
import BookstoreApp.BookstoreViewApp;
import BookstoreApp.model.Item;
import javafx.event.ActionEvent;
import javafx.scene.control.Label;

public class ChangeHotItemController {
	
	@FXML
	private Button btnUpdate;
	
	@FXML
	private TextField userInput;
	
	@FXML
	private Label errorMessage;

	private static ConcurrentNavigableMap<String, Item> hotItemDataTable = BookstoreViewApp.hotItemDataTable;
	
	private int positionNum = ManageHotItemsController.positionNum;
	
	private static DB database = BookstoreViewApp.database;
	
	private Stage dialogStage;
	
	public void setDialogStage(Stage dialogStage) {
		this.dialogStage = dialogStage;
	}
	
	//This method is for replacing a existing hot item in the database with a item.
	@FXML
	public void handleUpdate(ActionEvent event) {
		BTreeMap<String, Item> itemMap = database.getTreeMap("item");
		
		boolean checkValid = false;

		String name = "";
		
		//Get user input
		String input = userInput.getText();
		
		//Loop checks if item name given by user exists in database
		for (String key : itemMap.keySet()) {
			Item oneItem = itemMap.get(key);
			
			name = oneItem.getName();
			
			//If item name given exists, the existing item in database will be replaced with the item object
			//that is generated by the loop at that moment.
			if (input.equalsIgnoreCase(name)) {
				checkValid = true;
				
				String position = String.valueOf(positionNum);
				
				hotItemDataTable.replace(position, oneItem);
				database.commit();
				
				dialogStage.close();
			}
			else {
				errorMessage.setText("Invalid item name");
			}
		}
		
		if (checkValid == false) {
			errorMessage.setText("Please enter a exisiting item name");
		}
	}
}
